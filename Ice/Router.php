<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `Router.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/BuiltinSequences.php';
}

namespace Ice
{
    global $Ice__t_Router;
    global $Ice__t_RouterPrx;

    class RouterPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Ice::Router', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Ice::Router', $facet);
        }

        public static function ice_staticId()
        {
            return '::Ice::Router';
        }
    }
    $Ice__t_Router = IcePHP_defineClass('::Ice::Router', '\\Ice\\Router', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Ice__t_RouterPrx = IcePHP_defineProxy('::Ice::Router', $Ice__t_ObjectPrx, null);

    global $IcePHP__t_bool;
    global $Ice__t_ObjectPrx;
    global $Ice__t_ObjectProxySeq;
    IcePHP_defineOperation($Ice__t_RouterPrx, 'getClientProxy', 2, 1, 0, null, array(array($IcePHP__t_bool, 1)), array($Ice__t_ObjectPrx), null);
    IcePHP_defineOperation($Ice__t_RouterPrx, 'getServerProxy', 2, 1, 0, null, null, array($Ice__t_ObjectPrx), null);
    IcePHP_defineOperation($Ice__t_RouterPrx, 'addProxies', 2, 2, 0, array(array($Ice__t_ObjectProxySeq)), null, array($Ice__t_ObjectProxySeq), null);
}

namespace Ice
{
    global $Ice__t_RouterFinder;
    global $Ice__t_RouterFinderPrx;

    class RouterFinderPrxHelper
    {
        public static function checkedCast($proxy, $facetOrContext=null, $context=null)
        {
            return $proxy->ice_checkedCast('::Ice::RouterFinder', $facetOrContext, $context);
        }

        public static function uncheckedCast($proxy, $facet=null)
        {
            return $proxy->ice_uncheckedCast('::Ice::RouterFinder', $facet);
        }

        public static function ice_staticId()
        {
            return '::Ice::RouterFinder';
        }
    }
    $Ice__t_RouterFinder = IcePHP_defineClass('::Ice::RouterFinder', '\\Ice\\RouterFinder', -1, false, true, null, null);

    global $Ice__t_ObjectPrx;
    $Ice__t_RouterFinderPrx = IcePHP_defineProxy('::Ice::RouterFinder', $Ice__t_ObjectPrx, null);

    global $Ice__t_RouterPrx;
    IcePHP_defineOperation($Ice__t_RouterFinderPrx, 'getRouter', 0, 0, 0, null, null, array($Ice__t_RouterPrx), null);
}
namespace
{new Ice\SliceChecksumInit(array(
    "::Ice::Router" => "5d699ae7ef13629643981f91ff236c55",
    "::Ice::RouterFinder" => "94c0f14a95fc3b15b808186b4c3c512"));
}
?>
