<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `Exception.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/Identity.php';
    require_once 'Ice/BuiltinSequences.php';
}

namespace IceGrid
{
    global $IceGrid__t_ApplicationNotExistException;
    class ApplicationNotExistException extends \Ice\UserException
    {
        public function __construct($name='')
        {
            $this->name = $name;
        }

        public function ice_id()
        {
            return '::IceGrid::ApplicationNotExistException';
        }

        public function __toString()
        {
            global $IceGrid__t_ApplicationNotExistException;
            return IcePHP_stringifyException($this, $IceGrid__t_ApplicationNotExistException);
        }

        public $name;
    }
    global $IcePHP__t_string;

    $IceGrid__t_ApplicationNotExistException = IcePHP_defineException('::IceGrid::ApplicationNotExistException', '\\IceGrid\\ApplicationNotExistException', false, null, array(
        array('name', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerNotExistException;
    class ServerNotExistException extends \Ice\UserException
    {
        public function __construct($id='')
        {
            $this->id = $id;
        }

        public function ice_id()
        {
            return '::IceGrid::ServerNotExistException';
        }

        public function __toString()
        {
            global $IceGrid__t_ServerNotExistException;
            return IcePHP_stringifyException($this, $IceGrid__t_ServerNotExistException);
        }

        public $id;
    }
    global $IcePHP__t_string;

    $IceGrid__t_ServerNotExistException = IcePHP_defineException('::IceGrid::ServerNotExistException', '\\IceGrid\\ServerNotExistException', false, null, array(
        array('id', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerStartException;
    class ServerStartException extends \Ice\UserException
    {
        public function __construct($id='', $reason='')
        {
            $this->id = $id;
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::ServerStartException';
        }

        public function __toString()
        {
            global $IceGrid__t_ServerStartException;
            return IcePHP_stringifyException($this, $IceGrid__t_ServerStartException);
        }

        public $id;
        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_ServerStartException = IcePHP_defineException('::IceGrid::ServerStartException', '\\IceGrid\\ServerStartException', false, null, array(
        array('id', $IcePHP__t_string, false, 0),
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerStopException;
    class ServerStopException extends \Ice\UserException
    {
        public function __construct($id='', $reason='')
        {
            $this->id = $id;
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::ServerStopException';
        }

        public function __toString()
        {
            global $IceGrid__t_ServerStopException;
            return IcePHP_stringifyException($this, $IceGrid__t_ServerStopException);
        }

        public $id;
        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_ServerStopException = IcePHP_defineException('::IceGrid::ServerStopException', '\\IceGrid\\ServerStopException', false, null, array(
        array('id', $IcePHP__t_string, false, 0),
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_AdapterNotExistException;
    class AdapterNotExistException extends \Ice\UserException
    {
        public function __construct($id='')
        {
            $this->id = $id;
        }

        public function ice_id()
        {
            return '::IceGrid::AdapterNotExistException';
        }

        public function __toString()
        {
            global $IceGrid__t_AdapterNotExistException;
            return IcePHP_stringifyException($this, $IceGrid__t_AdapterNotExistException);
        }

        public $id;
    }
    global $IcePHP__t_string;

    $IceGrid__t_AdapterNotExistException = IcePHP_defineException('::IceGrid::AdapterNotExistException', '\\IceGrid\\AdapterNotExistException', false, null, array(
        array('id', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ObjectExistsException;
    class ObjectExistsException extends \Ice\UserException
    {
        public function __construct($id=null)
        {
            $this->id = is_null($id) ? new \Ice\Identity : $id;
        }

        public function ice_id()
        {
            return '::IceGrid::ObjectExistsException';
        }

        public function __toString()
        {
            global $IceGrid__t_ObjectExistsException;
            return IcePHP_stringifyException($this, $IceGrid__t_ObjectExistsException);
        }

        public $id;
    }
    global $Ice__t_Identity;

    $IceGrid__t_ObjectExistsException = IcePHP_defineException('::IceGrid::ObjectExistsException', '\\IceGrid\\ObjectExistsException', false, null, array(
        array('id', $Ice__t_Identity, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ObjectNotRegisteredException;
    class ObjectNotRegisteredException extends \Ice\UserException
    {
        public function __construct($id=null)
        {
            $this->id = is_null($id) ? new \Ice\Identity : $id;
        }

        public function ice_id()
        {
            return '::IceGrid::ObjectNotRegisteredException';
        }

        public function __toString()
        {
            global $IceGrid__t_ObjectNotRegisteredException;
            return IcePHP_stringifyException($this, $IceGrid__t_ObjectNotRegisteredException);
        }

        public $id;
    }
    global $Ice__t_Identity;

    $IceGrid__t_ObjectNotRegisteredException = IcePHP_defineException('::IceGrid::ObjectNotRegisteredException', '\\IceGrid\\ObjectNotRegisteredException', false, null, array(
        array('id', $Ice__t_Identity, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeNotExistException;
    class NodeNotExistException extends \Ice\UserException
    {
        public function __construct($name='')
        {
            $this->name = $name;
        }

        public function ice_id()
        {
            return '::IceGrid::NodeNotExistException';
        }

        public function __toString()
        {
            global $IceGrid__t_NodeNotExistException;
            return IcePHP_stringifyException($this, $IceGrid__t_NodeNotExistException);
        }

        public $name;
    }
    global $IcePHP__t_string;

    $IceGrid__t_NodeNotExistException = IcePHP_defineException('::IceGrid::NodeNotExistException', '\\IceGrid\\NodeNotExistException', false, null, array(
        array('name', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_RegistryNotExistException;
    class RegistryNotExistException extends \Ice\UserException
    {
        public function __construct($name='')
        {
            $this->name = $name;
        }

        public function ice_id()
        {
            return '::IceGrid::RegistryNotExistException';
        }

        public function __toString()
        {
            global $IceGrid__t_RegistryNotExistException;
            return IcePHP_stringifyException($this, $IceGrid__t_RegistryNotExistException);
        }

        public $name;
    }
    global $IcePHP__t_string;

    $IceGrid__t_RegistryNotExistException = IcePHP_defineException('::IceGrid::RegistryNotExistException', '\\IceGrid\\RegistryNotExistException', false, null, array(
        array('name', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_DeploymentException;
    class DeploymentException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::DeploymentException';
        }

        public function __toString()
        {
            global $IceGrid__t_DeploymentException;
            return IcePHP_stringifyException($this, $IceGrid__t_DeploymentException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_DeploymentException = IcePHP_defineException('::IceGrid::DeploymentException', '\\IceGrid\\DeploymentException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeUnreachableException;
    class NodeUnreachableException extends \Ice\UserException
    {
        public function __construct($name='', $reason='')
        {
            $this->name = $name;
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::NodeUnreachableException';
        }

        public function __toString()
        {
            global $IceGrid__t_NodeUnreachableException;
            return IcePHP_stringifyException($this, $IceGrid__t_NodeUnreachableException);
        }

        public $name;
        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_NodeUnreachableException = IcePHP_defineException('::IceGrid::NodeUnreachableException', '\\IceGrid\\NodeUnreachableException', false, null, array(
        array('name', $IcePHP__t_string, false, 0),
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerUnreachableException;
    class ServerUnreachableException extends \Ice\UserException
    {
        public function __construct($name='', $reason='')
        {
            $this->name = $name;
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::ServerUnreachableException';
        }

        public function __toString()
        {
            global $IceGrid__t_ServerUnreachableException;
            return IcePHP_stringifyException($this, $IceGrid__t_ServerUnreachableException);
        }

        public $name;
        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_ServerUnreachableException = IcePHP_defineException('::IceGrid::ServerUnreachableException', '\\IceGrid\\ServerUnreachableException', false, null, array(
        array('name', $IcePHP__t_string, false, 0),
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_RegistryUnreachableException;
    class RegistryUnreachableException extends \Ice\UserException
    {
        public function __construct($name='', $reason='')
        {
            $this->name = $name;
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::RegistryUnreachableException';
        }

        public function __toString()
        {
            global $IceGrid__t_RegistryUnreachableException;
            return IcePHP_stringifyException($this, $IceGrid__t_RegistryUnreachableException);
        }

        public $name;
        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_RegistryUnreachableException = IcePHP_defineException('::IceGrid::RegistryUnreachableException', '\\IceGrid\\RegistryUnreachableException', false, null, array(
        array('name', $IcePHP__t_string, false, 0),
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_BadSignalException;
    class BadSignalException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::BadSignalException';
        }

        public function __toString()
        {
            global $IceGrid__t_BadSignalException;
            return IcePHP_stringifyException($this, $IceGrid__t_BadSignalException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_BadSignalException = IcePHP_defineException('::IceGrid::BadSignalException', '\\IceGrid\\BadSignalException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_PatchException;
    class PatchException extends \Ice\UserException
    {
        public function __construct($reasons=null)
        {
            $this->reasons = $reasons;
        }

        public function ice_id()
        {
            return '::IceGrid::PatchException';
        }

        public function __toString()
        {
            global $IceGrid__t_PatchException;
            return IcePHP_stringifyException($this, $IceGrid__t_PatchException);
        }

        public $reasons;
    }
    global $Ice__t_StringSeq;

    $IceGrid__t_PatchException = IcePHP_defineException('::IceGrid::PatchException', '\\IceGrid\\PatchException', false, null, array(
        array('reasons', $Ice__t_StringSeq, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_AccessDeniedException;
    class AccessDeniedException extends \Ice\UserException
    {
        public function __construct($lockUserId='')
        {
            $this->lockUserId = $lockUserId;
        }

        public function ice_id()
        {
            return '::IceGrid::AccessDeniedException';
        }

        public function __toString()
        {
            global $IceGrid__t_AccessDeniedException;
            return IcePHP_stringifyException($this, $IceGrid__t_AccessDeniedException);
        }

        public $lockUserId;
    }
    global $IcePHP__t_string;

    $IceGrid__t_AccessDeniedException = IcePHP_defineException('::IceGrid::AccessDeniedException', '\\IceGrid\\AccessDeniedException', false, null, array(
        array('lockUserId', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_AllocationException;
    class AllocationException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::AllocationException';
        }

        public function __toString()
        {
            global $IceGrid__t_AllocationException;
            return IcePHP_stringifyException($this, $IceGrid__t_AllocationException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_AllocationException = IcePHP_defineException('::IceGrid::AllocationException', '\\IceGrid\\AllocationException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_AllocationTimeoutException;
    class AllocationTimeoutException extends \IceGrid\AllocationException
    {
        public function __construct($reason='')
        {
            parent::__construct($reason);
        }

        public function ice_id()
        {
            return '::IceGrid::AllocationTimeoutException';
        }

        public function __toString()
        {
            global $IceGrid__t_AllocationTimeoutException;
            return IcePHP_stringifyException($this, $IceGrid__t_AllocationTimeoutException);
        }
    }

    $IceGrid__t_AllocationTimeoutException = IcePHP_defineException('::IceGrid::AllocationTimeoutException', '\\IceGrid\\AllocationTimeoutException', false, $IceGrid__t_AllocationException, null);
}

namespace IceGrid
{
    global $IceGrid__t_PermissionDeniedException;
    class PermissionDeniedException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::PermissionDeniedException';
        }

        public function __toString()
        {
            global $IceGrid__t_PermissionDeniedException;
            return IcePHP_stringifyException($this, $IceGrid__t_PermissionDeniedException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_PermissionDeniedException = IcePHP_defineException('::IceGrid::PermissionDeniedException', '\\IceGrid\\PermissionDeniedException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ObserverAlreadyRegisteredException;
    class ObserverAlreadyRegisteredException extends \Ice\UserException
    {
        public function __construct($id=null)
        {
            $this->id = is_null($id) ? new \Ice\Identity : $id;
        }

        public function ice_id()
        {
            return '::IceGrid::ObserverAlreadyRegisteredException';
        }

        public function __toString()
        {
            global $IceGrid__t_ObserverAlreadyRegisteredException;
            return IcePHP_stringifyException($this, $IceGrid__t_ObserverAlreadyRegisteredException);
        }

        public $id;
    }
    global $Ice__t_Identity;

    $IceGrid__t_ObserverAlreadyRegisteredException = IcePHP_defineException('::IceGrid::ObserverAlreadyRegisteredException', '\\IceGrid\\ObserverAlreadyRegisteredException', false, null, array(
        array('id', $Ice__t_Identity, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_FileNotAvailableException;
    class FileNotAvailableException extends \Ice\UserException
    {
        public function __construct($reason='')
        {
            $this->reason = $reason;
        }

        public function ice_id()
        {
            return '::IceGrid::FileNotAvailableException';
        }

        public function __toString()
        {
            global $IceGrid__t_FileNotAvailableException;
            return IcePHP_stringifyException($this, $IceGrid__t_FileNotAvailableException);
        }

        public $reason;
    }
    global $IcePHP__t_string;

    $IceGrid__t_FileNotAvailableException = IcePHP_defineException('::IceGrid::FileNotAvailableException', '\\IceGrid\\FileNotAvailableException', false, null, array(
        array('reason', $IcePHP__t_string, false, 0)));
}
namespace
{new Ice\SliceChecksumInit(array(
    "::IceGrid::AccessDeniedException" => "e39e5ad60577c1e7b52e190e1d906b",
    "::IceGrid::AdapterNotExistException" => "cee552cb69227f723030cd78b0cccc97",
    "::IceGrid::AllocationException" => "ea85a8e5e5f281709bf6aa88d742",
    "::IceGrid::AllocationTimeoutException" => "6695f5713499ac6de0626277e167f553",
    "::IceGrid::ApplicationNotExistException" => "93fdaabe25dcf75485ffd4972223610",
    "::IceGrid::BadSignalException" => "13e67e2d3f46a84aa73fd56d5812caf1",
    "::IceGrid::DeploymentException" => "e316fdba8e93ef72d58bd61bbfe29e4",
    "::IceGrid::FileNotAvailableException" => "a3e88ae3be93ecd4c82797ad26d6076",
    "::IceGrid::NodeNotExistException" => "f07ddace1aa3cb1bbed37c3fbf862dff",
    "::IceGrid::NodeUnreachableException" => "8f894a5022704f4dde30bb2a3ea326f9",
    "::IceGrid::ObjectExistsException" => "833f69d3ebc872974a9f096352d2ddb",
    "::IceGrid::ObjectNotRegisteredException" => "cb181c92b4dfb6e6b97f4ca806899e7",
    "::IceGrid::ObserverAlreadyRegisteredException" => "e1267578f9666e2bda9952d7106fd12c",
    "::IceGrid::PatchException" => "c28994d76c834b99b94cf4535a13d3",
    "::IceGrid::PermissionDeniedException" => "27def8d4569ab203b629b9162d530ba",
    "::IceGrid::RegistryNotExistException" => "9e1c1b717e9c5ef72886f16dbfce56f",
    "::IceGrid::RegistryUnreachableException" => "514020cac28c588ae487a628e227699",
    "::IceGrid::ServerNotExistException" => "6df151f3ce87bd522ed095f7ad97a941",
    "::IceGrid::ServerStartException" => "ce92acafa218dd1d1e8aafab20d1",
    "::IceGrid::ServerStopException" => "edb57abb5393b8b31b41f3a8e5bd111",
    "::IceGrid::ServerUnreachableException" => "f3233583ef7ad8eac2f961aedafdd64"));
}
?>
