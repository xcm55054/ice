<?php
//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.3
//
// <auto-generated>
//
// Generated from file `Descriptor.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


namespace
{
    require_once 'Ice/Identity.php';
    require_once 'Ice/BuiltinSequences.php';
}

namespace IceGrid
{
    global $IceGrid__t_StringStringDict;

    if(!isset($IceGrid__t_StringStringDict))
    {
        global $IcePHP__t_string;
        global $IcePHP__t_string;
        $IceGrid__t_StringStringDict = IcePHP_defineDictionary('::IceGrid::StringStringDict', $IcePHP__t_string, $IcePHP__t_string);
    }
}

namespace IceGrid
{
    global $IceGrid__t_PropertyDescriptor;
    class PropertyDescriptor
    {
        public function __construct($name='', $value='')
        {
            $this->name = $name;
            $this->value = $value;
        }

        public function __toString()
        {
            global $IceGrid__t_PropertyDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_PropertyDescriptor);
        }

        public $name;
        public $value;
    }

    global $IcePHP__t_string;
    $IceGrid__t_PropertyDescriptor = IcePHP_defineStruct('::IceGrid::PropertyDescriptor', '\\IceGrid\\PropertyDescriptor', array(
        array('name', $IcePHP__t_string),
        array('value', $IcePHP__t_string)));
}

namespace IceGrid
{
    global $IceGrid__t_PropertyDescriptorSeq;

    if(!isset($IceGrid__t_PropertyDescriptorSeq))
    {
        global $IceGrid__t_PropertyDescriptor;
        $IceGrid__t_PropertyDescriptorSeq = IcePHP_defineSequence('::IceGrid::PropertyDescriptorSeq', $IceGrid__t_PropertyDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_PropertySetDescriptor;
    class PropertySetDescriptor
    {
        public function __construct($references=null, $properties=null)
        {
            $this->references = $references;
            $this->properties = $properties;
        }

        public function __toString()
        {
            global $IceGrid__t_PropertySetDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_PropertySetDescriptor);
        }

        public $references;
        public $properties;
    }

    global $Ice__t_StringSeq;
    global $IceGrid__t_PropertyDescriptorSeq;
    $IceGrid__t_PropertySetDescriptor = IcePHP_defineStruct('::IceGrid::PropertySetDescriptor', '\\IceGrid\\PropertySetDescriptor', array(
        array('references', $Ice__t_StringSeq),
        array('properties', $IceGrid__t_PropertyDescriptorSeq)));
}

namespace IceGrid
{
    global $IceGrid__t_PropertySetDescriptorDict;

    if(!isset($IceGrid__t_PropertySetDescriptorDict))
    {
        global $IcePHP__t_string;
        global $IceGrid__t_PropertySetDescriptor;
        $IceGrid__t_PropertySetDescriptorDict = IcePHP_defineDictionary('::IceGrid::PropertySetDescriptorDict', $IcePHP__t_string, $IceGrid__t_PropertySetDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_ObjectDescriptor;
    class ObjectDescriptor
    {
        public function __construct($id=null, $type='', $proxyOptions='')
        {
            $this->id = is_null($id) ? new \Ice\Identity : $id;
            $this->type = $type;
            $this->proxyOptions = $proxyOptions;
        }

        public function __toString()
        {
            global $IceGrid__t_ObjectDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ObjectDescriptor);
        }

        public $id;
        public $type;
        public $proxyOptions;
    }

    global $Ice__t_Identity;
    global $IcePHP__t_string;
    $IceGrid__t_ObjectDescriptor = IcePHP_defineStruct('::IceGrid::ObjectDescriptor', '\\IceGrid\\ObjectDescriptor', array(
        array('id', $Ice__t_Identity),
        array('type', $IcePHP__t_string),
        array('proxyOptions', $IcePHP__t_string)));
}

namespace IceGrid
{
    global $IceGrid__t_ObjectDescriptorSeq;

    if(!isset($IceGrid__t_ObjectDescriptorSeq))
    {
        global $IceGrid__t_ObjectDescriptor;
        $IceGrid__t_ObjectDescriptorSeq = IcePHP_defineSequence('::IceGrid::ObjectDescriptorSeq', $IceGrid__t_ObjectDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_AdapterDescriptor;
    class AdapterDescriptor
    {
        public function __construct($name='', $description='', $id='', $replicaGroupId='', $priority='', $registerProcess=false, $serverLifetime=false, $objects=null, $allocatables=null)
        {
            $this->name = $name;
            $this->description = $description;
            $this->id = $id;
            $this->replicaGroupId = $replicaGroupId;
            $this->priority = $priority;
            $this->registerProcess = $registerProcess;
            $this->serverLifetime = $serverLifetime;
            $this->objects = $objects;
            $this->allocatables = $allocatables;
        }

        public function __toString()
        {
            global $IceGrid__t_AdapterDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_AdapterDescriptor);
        }

        public $name;
        public $description;
        public $id;
        public $replicaGroupId;
        public $priority;
        public $registerProcess;
        public $serverLifetime;
        public $objects;
        public $allocatables;
    }

    global $IcePHP__t_string;
    global $IcePHP__t_bool;
    global $IceGrid__t_ObjectDescriptorSeq;
    $IceGrid__t_AdapterDescriptor = IcePHP_defineStruct('::IceGrid::AdapterDescriptor', '\\IceGrid\\AdapterDescriptor', array(
        array('name', $IcePHP__t_string),
        array('description', $IcePHP__t_string),
        array('id', $IcePHP__t_string),
        array('replicaGroupId', $IcePHP__t_string),
        array('priority', $IcePHP__t_string),
        array('registerProcess', $IcePHP__t_bool),
        array('serverLifetime', $IcePHP__t_bool),
        array('objects', $IceGrid__t_ObjectDescriptorSeq),
        array('allocatables', $IceGrid__t_ObjectDescriptorSeq)));
}

namespace IceGrid
{
    global $IceGrid__t_AdapterDescriptorSeq;

    if(!isset($IceGrid__t_AdapterDescriptorSeq))
    {
        global $IceGrid__t_AdapterDescriptor;
        $IceGrid__t_AdapterDescriptorSeq = IcePHP_defineSequence('::IceGrid::AdapterDescriptorSeq', $IceGrid__t_AdapterDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_DbEnvDescriptor;
    class DbEnvDescriptor
    {
        public function __construct($name='', $description='', $dbHome='', $properties=null)
        {
            $this->name = $name;
            $this->description = $description;
            $this->dbHome = $dbHome;
            $this->properties = $properties;
        }

        public function __toString()
        {
            global $IceGrid__t_DbEnvDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_DbEnvDescriptor);
        }

        public $name;
        public $description;
        public $dbHome;
        public $properties;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_PropertyDescriptorSeq;
    $IceGrid__t_DbEnvDescriptor = IcePHP_defineStruct('::IceGrid::DbEnvDescriptor', '\\IceGrid\\DbEnvDescriptor', array(
        array('name', $IcePHP__t_string),
        array('description', $IcePHP__t_string),
        array('dbHome', $IcePHP__t_string),
        array('properties', $IceGrid__t_PropertyDescriptorSeq)));
}

namespace IceGrid
{
    global $IceGrid__t_DbEnvDescriptorSeq;

    if(!isset($IceGrid__t_DbEnvDescriptorSeq))
    {
        global $IceGrid__t_DbEnvDescriptor;
        $IceGrid__t_DbEnvDescriptorSeq = IcePHP_defineSequence('::IceGrid::DbEnvDescriptorSeq', $IceGrid__t_DbEnvDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_CommunicatorDescriptor;
    class CommunicatorDescriptor extends \Ice\Value
    {
        public function __construct($adapters=null, $propertySet=null, $dbEnvs=null, $logs=null, $description='')
        {
            $this->adapters = $adapters;
            $this->propertySet = is_null($propertySet) ? new \IceGrid\PropertySetDescriptor : $propertySet;
            $this->dbEnvs = $dbEnvs;
            $this->logs = $logs;
            $this->description = $description;
        }

        public function ice_id()
        {
            return '::IceGrid::CommunicatorDescriptor';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::CommunicatorDescriptor';
        }

        public function __toString()
        {
            global $IceGrid__t_CommunicatorDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_CommunicatorDescriptor);
        }

        public $adapters;
        public $propertySet;
        public $dbEnvs;
        public $logs;
        public $description;
    }

    global $Ice__t_Value;
    global $IceGrid__t_AdapterDescriptorSeq;
    global $IceGrid__t_PropertySetDescriptor;
    global $IceGrid__t_DbEnvDescriptorSeq;
    global $Ice__t_StringSeq;
    global $IcePHP__t_string;
    $IceGrid__t_CommunicatorDescriptor = IcePHP_defineClass('::IceGrid::CommunicatorDescriptor', '\\IceGrid\\CommunicatorDescriptor', -1, false, false, $Ice__t_Value, array(
        array('adapters', $IceGrid__t_AdapterDescriptorSeq, false, 0),
        array('propertySet', $IceGrid__t_PropertySetDescriptor, false, 0),
        array('dbEnvs', $IceGrid__t_DbEnvDescriptorSeq, false, 0),
        array('logs', $Ice__t_StringSeq, false, 0),
        array('description', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_DistributionDescriptor;
    class DistributionDescriptor
    {
        public function __construct($icepatch='', $directories=null)
        {
            $this->icepatch = $icepatch;
            $this->directories = $directories;
        }

        public function __toString()
        {
            global $IceGrid__t_DistributionDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_DistributionDescriptor);
        }

        public $icepatch;
        public $directories;
    }

    global $IcePHP__t_string;
    global $Ice__t_StringSeq;
    $IceGrid__t_DistributionDescriptor = IcePHP_defineStruct('::IceGrid::DistributionDescriptor', '\\IceGrid\\DistributionDescriptor', array(
        array('icepatch', $IcePHP__t_string),
        array('directories', $Ice__t_StringSeq)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerDescriptor;
    class ServerDescriptor extends \IceGrid\CommunicatorDescriptor
    {
        public function __construct($adapters=null, $propertySet=null, $dbEnvs=null, $logs=null, $description='', $id='', $exe='', $iceVersion='', $pwd='', $options=null, $envs=null, $activation='', $activationTimeout='', $deactivationTimeout='', $applicationDistrib=false, $distrib=null, $allocatable=false, $user='')
        {
            parent::__construct($adapters, $propertySet, $dbEnvs, $logs, $description);
            $this->id = $id;
            $this->exe = $exe;
            $this->iceVersion = $iceVersion;
            $this->pwd = $pwd;
            $this->options = $options;
            $this->envs = $envs;
            $this->activation = $activation;
            $this->activationTimeout = $activationTimeout;
            $this->deactivationTimeout = $deactivationTimeout;
            $this->applicationDistrib = $applicationDistrib;
            $this->distrib = is_null($distrib) ? new \IceGrid\DistributionDescriptor : $distrib;
            $this->allocatable = $allocatable;
            $this->user = $user;
        }

        public function ice_id()
        {
            return '::IceGrid::ServerDescriptor';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::ServerDescriptor';
        }

        public function __toString()
        {
            global $IceGrid__t_ServerDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ServerDescriptor);
        }

        public $id;
        public $exe;
        public $iceVersion;
        public $pwd;
        public $options;
        public $envs;
        public $activation;
        public $activationTimeout;
        public $deactivationTimeout;
        public $applicationDistrib;
        public $distrib;
        public $allocatable;
        public $user;
    }

    global $IceGrid__t_CommunicatorDescriptor;
    global $IcePHP__t_string;
    global $Ice__t_StringSeq;
    global $IcePHP__t_bool;
    global $IceGrid__t_DistributionDescriptor;
    $IceGrid__t_ServerDescriptor = IcePHP_defineClass('::IceGrid::ServerDescriptor', '\\IceGrid\\ServerDescriptor', -1, false, false, $IceGrid__t_CommunicatorDescriptor, array(
        array('id', $IcePHP__t_string, false, 0),
        array('exe', $IcePHP__t_string, false, 0),
        array('iceVersion', $IcePHP__t_string, false, 0),
        array('pwd', $IcePHP__t_string, false, 0),
        array('options', $Ice__t_StringSeq, false, 0),
        array('envs', $Ice__t_StringSeq, false, 0),
        array('activation', $IcePHP__t_string, false, 0),
        array('activationTimeout', $IcePHP__t_string, false, 0),
        array('deactivationTimeout', $IcePHP__t_string, false, 0),
        array('applicationDistrib', $IcePHP__t_bool, false, 0),
        array('distrib', $IceGrid__t_DistributionDescriptor, false, 0),
        array('allocatable', $IcePHP__t_bool, false, 0),
        array('user', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerDescriptorSeq;

    if(!isset($IceGrid__t_ServerDescriptorSeq))
    {
        global $IceGrid__t_ServerDescriptor;
        $IceGrid__t_ServerDescriptorSeq = IcePHP_defineSequence('::IceGrid::ServerDescriptorSeq', $IceGrid__t_ServerDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_ServiceDescriptor;
    class ServiceDescriptor extends \IceGrid\CommunicatorDescriptor
    {
        public function __construct($adapters=null, $propertySet=null, $dbEnvs=null, $logs=null, $description='', $name='', $entry='')
        {
            parent::__construct($adapters, $propertySet, $dbEnvs, $logs, $description);
            $this->name = $name;
            $this->entry = $entry;
        }

        public function ice_id()
        {
            return '::IceGrid::ServiceDescriptor';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::ServiceDescriptor';
        }

        public function __toString()
        {
            global $IceGrid__t_ServiceDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ServiceDescriptor);
        }

        public $name;
        public $entry;
    }

    global $IceGrid__t_CommunicatorDescriptor;
    global $IcePHP__t_string;
    $IceGrid__t_ServiceDescriptor = IcePHP_defineClass('::IceGrid::ServiceDescriptor', '\\IceGrid\\ServiceDescriptor', -1, false, false, $IceGrid__t_CommunicatorDescriptor, array(
        array('name', $IcePHP__t_string, false, 0),
        array('entry', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ServiceDescriptorSeq;

    if(!isset($IceGrid__t_ServiceDescriptorSeq))
    {
        global $IceGrid__t_ServiceDescriptor;
        $IceGrid__t_ServiceDescriptorSeq = IcePHP_defineSequence('::IceGrid::ServiceDescriptorSeq', $IceGrid__t_ServiceDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_ServerInstanceDescriptor;
    class ServerInstanceDescriptor
    {
        public function __construct($template='', $parameterValues=null, $propertySet=null, $servicePropertySets=null)
        {
            $this->template = $template;
            $this->parameterValues = $parameterValues;
            $this->propertySet = is_null($propertySet) ? new \IceGrid\PropertySetDescriptor : $propertySet;
            $this->servicePropertySets = $servicePropertySets;
        }

        public function __toString()
        {
            global $IceGrid__t_ServerInstanceDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ServerInstanceDescriptor);
        }

        public $template;
        public $parameterValues;
        public $propertySet;
        public $servicePropertySets;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_StringStringDict;
    global $IceGrid__t_PropertySetDescriptor;
    global $IceGrid__t_PropertySetDescriptorDict;
    $IceGrid__t_ServerInstanceDescriptor = IcePHP_defineStruct('::IceGrid::ServerInstanceDescriptor', '\\IceGrid\\ServerInstanceDescriptor', array(
        array('template', $IcePHP__t_string),
        array('parameterValues', $IceGrid__t_StringStringDict),
        array('propertySet', $IceGrid__t_PropertySetDescriptor),
        array('servicePropertySets', $IceGrid__t_PropertySetDescriptorDict)));
}

namespace IceGrid
{
    global $IceGrid__t_ServerInstanceDescriptorSeq;

    if(!isset($IceGrid__t_ServerInstanceDescriptorSeq))
    {
        global $IceGrid__t_ServerInstanceDescriptor;
        $IceGrid__t_ServerInstanceDescriptorSeq = IcePHP_defineSequence('::IceGrid::ServerInstanceDescriptorSeq', $IceGrid__t_ServerInstanceDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_TemplateDescriptor;
    class TemplateDescriptor
    {
        public function __construct($descriptor=null, $parameters=null, $parameterDefaults=null)
        {
            $this->descriptor = $descriptor;
            $this->parameters = $parameters;
            $this->parameterDefaults = $parameterDefaults;
        }

        public function __toString()
        {
            global $IceGrid__t_TemplateDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_TemplateDescriptor);
        }

        public $descriptor;
        public $parameters;
        public $parameterDefaults;
    }

    global $IceGrid__t_CommunicatorDescriptor;
    global $Ice__t_StringSeq;
    global $IceGrid__t_StringStringDict;
    $IceGrid__t_TemplateDescriptor = IcePHP_defineStruct('::IceGrid::TemplateDescriptor', '\\IceGrid\\TemplateDescriptor', array(
        array('descriptor', $IceGrid__t_CommunicatorDescriptor),
        array('parameters', $Ice__t_StringSeq),
        array('parameterDefaults', $IceGrid__t_StringStringDict)));
}

namespace IceGrid
{
    global $IceGrid__t_TemplateDescriptorDict;

    if(!isset($IceGrid__t_TemplateDescriptorDict))
    {
        global $IcePHP__t_string;
        global $IceGrid__t_TemplateDescriptor;
        $IceGrid__t_TemplateDescriptorDict = IcePHP_defineDictionary('::IceGrid::TemplateDescriptorDict', $IcePHP__t_string, $IceGrid__t_TemplateDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_ServiceInstanceDescriptor;
    class ServiceInstanceDescriptor
    {
        public function __construct($template='', $parameterValues=null, $descriptor=null, $propertySet=null)
        {
            $this->template = $template;
            $this->parameterValues = $parameterValues;
            $this->descriptor = $descriptor;
            $this->propertySet = is_null($propertySet) ? new \IceGrid\PropertySetDescriptor : $propertySet;
        }

        public function __toString()
        {
            global $IceGrid__t_ServiceInstanceDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ServiceInstanceDescriptor);
        }

        public $template;
        public $parameterValues;
        public $descriptor;
        public $propertySet;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_StringStringDict;
    global $IceGrid__t_ServiceDescriptor;
    global $IceGrid__t_PropertySetDescriptor;
    $IceGrid__t_ServiceInstanceDescriptor = IcePHP_defineStruct('::IceGrid::ServiceInstanceDescriptor', '\\IceGrid\\ServiceInstanceDescriptor', array(
        array('template', $IcePHP__t_string),
        array('parameterValues', $IceGrid__t_StringStringDict),
        array('descriptor', $IceGrid__t_ServiceDescriptor),
        array('propertySet', $IceGrid__t_PropertySetDescriptor)));
}

namespace IceGrid
{
    global $IceGrid__t_ServiceInstanceDescriptorSeq;

    if(!isset($IceGrid__t_ServiceInstanceDescriptorSeq))
    {
        global $IceGrid__t_ServiceInstanceDescriptor;
        $IceGrid__t_ServiceInstanceDescriptorSeq = IcePHP_defineSequence('::IceGrid::ServiceInstanceDescriptorSeq', $IceGrid__t_ServiceInstanceDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_IceBoxDescriptor;
    class IceBoxDescriptor extends \IceGrid\ServerDescriptor
    {
        public function __construct($adapters=null, $propertySet=null, $dbEnvs=null, $logs=null, $description='', $id='', $exe='', $iceVersion='', $pwd='', $options=null, $envs=null, $activation='', $activationTimeout='', $deactivationTimeout='', $applicationDistrib=false, $distrib=null, $allocatable=false, $user='', $services=null)
        {
            parent::__construct($adapters, $propertySet, $dbEnvs, $logs, $description, $id, $exe, $iceVersion, $pwd, $options, $envs, $activation, $activationTimeout, $deactivationTimeout, $applicationDistrib, $distrib, $allocatable, $user);
            $this->services = $services;
        }

        public function ice_id()
        {
            return '::IceGrid::IceBoxDescriptor';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::IceBoxDescriptor';
        }

        public function __toString()
        {
            global $IceGrid__t_IceBoxDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_IceBoxDescriptor);
        }

        public $services;
    }

    $IceGrid__t_IceBoxDescriptor = IcePHP_declareClass('::IceGrid::IceBoxDescriptor');

    global $IceGrid__t_ServerDescriptor;
    global $IceGrid__t_ServiceInstanceDescriptorSeq;
    $IceGrid__t_IceBoxDescriptor = IcePHP_defineClass('::IceGrid::IceBoxDescriptor', '\\IceGrid\\IceBoxDescriptor', -1, false, false, $IceGrid__t_ServerDescriptor, array(
        array('services', $IceGrid__t_ServiceInstanceDescriptorSeq, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeDescriptor;
    class NodeDescriptor
    {
        public function __construct($variables=null, $serverInstances=null, $servers=null, $loadFactor='', $description='', $propertySets=null)
        {
            $this->variables = $variables;
            $this->serverInstances = $serverInstances;
            $this->servers = $servers;
            $this->loadFactor = $loadFactor;
            $this->description = $description;
            $this->propertySets = $propertySets;
        }

        public function __toString()
        {
            global $IceGrid__t_NodeDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_NodeDescriptor);
        }

        public $variables;
        public $serverInstances;
        public $servers;
        public $loadFactor;
        public $description;
        public $propertySets;
    }

    global $IceGrid__t_StringStringDict;
    global $IceGrid__t_ServerInstanceDescriptorSeq;
    global $IceGrid__t_ServerDescriptorSeq;
    global $IcePHP__t_string;
    global $IceGrid__t_PropertySetDescriptorDict;
    $IceGrid__t_NodeDescriptor = IcePHP_defineStruct('::IceGrid::NodeDescriptor', '\\IceGrid\\NodeDescriptor', array(
        array('variables', $IceGrid__t_StringStringDict),
        array('serverInstances', $IceGrid__t_ServerInstanceDescriptorSeq),
        array('servers', $IceGrid__t_ServerDescriptorSeq),
        array('loadFactor', $IcePHP__t_string),
        array('description', $IcePHP__t_string),
        array('propertySets', $IceGrid__t_PropertySetDescriptorDict)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeDescriptorDict;

    if(!isset($IceGrid__t_NodeDescriptorDict))
    {
        global $IcePHP__t_string;
        global $IceGrid__t_NodeDescriptor;
        $IceGrid__t_NodeDescriptorDict = IcePHP_defineDictionary('::IceGrid::NodeDescriptorDict', $IcePHP__t_string, $IceGrid__t_NodeDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_LoadBalancingPolicy;
    class LoadBalancingPolicy extends \Ice\Value
    {
        public function __construct($nReplicas='')
        {
            $this->nReplicas = $nReplicas;
        }

        public function ice_id()
        {
            return '::IceGrid::LoadBalancingPolicy';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::LoadBalancingPolicy';
        }

        public function __toString()
        {
            global $IceGrid__t_LoadBalancingPolicy;
            return IcePHP_stringify($this, $IceGrid__t_LoadBalancingPolicy);
        }

        public $nReplicas;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $IceGrid__t_LoadBalancingPolicy = IcePHP_defineClass('::IceGrid::LoadBalancingPolicy', '\\IceGrid\\LoadBalancingPolicy', -1, false, false, $Ice__t_Value, array(
        array('nReplicas', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_RandomLoadBalancingPolicy;
    class RandomLoadBalancingPolicy extends \IceGrid\LoadBalancingPolicy
    {
        public function __construct($nReplicas='')
        {
            parent::__construct($nReplicas);
        }

        public function ice_id()
        {
            return '::IceGrid::RandomLoadBalancingPolicy';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::RandomLoadBalancingPolicy';
        }

        public function __toString()
        {
            global $IceGrid__t_RandomLoadBalancingPolicy;
            return IcePHP_stringify($this, $IceGrid__t_RandomLoadBalancingPolicy);
        }
    }

    global $IceGrid__t_LoadBalancingPolicy;
    $IceGrid__t_RandomLoadBalancingPolicy = IcePHP_defineClass('::IceGrid::RandomLoadBalancingPolicy', '\\IceGrid\\RandomLoadBalancingPolicy', -1, false, false, $IceGrid__t_LoadBalancingPolicy, null);
}

namespace IceGrid
{
    global $IceGrid__t_OrderedLoadBalancingPolicy;
    class OrderedLoadBalancingPolicy extends \IceGrid\LoadBalancingPolicy
    {
        public function __construct($nReplicas='')
        {
            parent::__construct($nReplicas);
        }

        public function ice_id()
        {
            return '::IceGrid::OrderedLoadBalancingPolicy';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::OrderedLoadBalancingPolicy';
        }

        public function __toString()
        {
            global $IceGrid__t_OrderedLoadBalancingPolicy;
            return IcePHP_stringify($this, $IceGrid__t_OrderedLoadBalancingPolicy);
        }
    }

    global $IceGrid__t_LoadBalancingPolicy;
    $IceGrid__t_OrderedLoadBalancingPolicy = IcePHP_defineClass('::IceGrid::OrderedLoadBalancingPolicy', '\\IceGrid\\OrderedLoadBalancingPolicy', -1, false, false, $IceGrid__t_LoadBalancingPolicy, null);
}

namespace IceGrid
{
    global $IceGrid__t_RoundRobinLoadBalancingPolicy;
    class RoundRobinLoadBalancingPolicy extends \IceGrid\LoadBalancingPolicy
    {
        public function __construct($nReplicas='')
        {
            parent::__construct($nReplicas);
        }

        public function ice_id()
        {
            return '::IceGrid::RoundRobinLoadBalancingPolicy';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::RoundRobinLoadBalancingPolicy';
        }

        public function __toString()
        {
            global $IceGrid__t_RoundRobinLoadBalancingPolicy;
            return IcePHP_stringify($this, $IceGrid__t_RoundRobinLoadBalancingPolicy);
        }
    }

    global $IceGrid__t_LoadBalancingPolicy;
    $IceGrid__t_RoundRobinLoadBalancingPolicy = IcePHP_defineClass('::IceGrid::RoundRobinLoadBalancingPolicy', '\\IceGrid\\RoundRobinLoadBalancingPolicy', -1, false, false, $IceGrid__t_LoadBalancingPolicy, null);
}

namespace IceGrid
{
    global $IceGrid__t_AdaptiveLoadBalancingPolicy;
    class AdaptiveLoadBalancingPolicy extends \IceGrid\LoadBalancingPolicy
    {
        public function __construct($nReplicas='', $loadSample='')
        {
            parent::__construct($nReplicas);
            $this->loadSample = $loadSample;
        }

        public function ice_id()
        {
            return '::IceGrid::AdaptiveLoadBalancingPolicy';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::AdaptiveLoadBalancingPolicy';
        }

        public function __toString()
        {
            global $IceGrid__t_AdaptiveLoadBalancingPolicy;
            return IcePHP_stringify($this, $IceGrid__t_AdaptiveLoadBalancingPolicy);
        }

        public $loadSample;
    }

    global $IceGrid__t_LoadBalancingPolicy;
    global $IcePHP__t_string;
    $IceGrid__t_AdaptiveLoadBalancingPolicy = IcePHP_defineClass('::IceGrid::AdaptiveLoadBalancingPolicy', '\\IceGrid\\AdaptiveLoadBalancingPolicy', -1, false, false, $IceGrid__t_LoadBalancingPolicy, array(
        array('loadSample', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ReplicaGroupDescriptor;
    class ReplicaGroupDescriptor
    {
        public function __construct($id='', $loadBalancing=null, $proxyOptions='', $objects=null, $description='', $filter='')
        {
            $this->id = $id;
            $this->loadBalancing = $loadBalancing;
            $this->proxyOptions = $proxyOptions;
            $this->objects = $objects;
            $this->description = $description;
            $this->filter = $filter;
        }

        public function __toString()
        {
            global $IceGrid__t_ReplicaGroupDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ReplicaGroupDescriptor);
        }

        public $id;
        public $loadBalancing;
        public $proxyOptions;
        public $objects;
        public $description;
        public $filter;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_LoadBalancingPolicy;
    global $IceGrid__t_ObjectDescriptorSeq;
    $IceGrid__t_ReplicaGroupDescriptor = IcePHP_defineStruct('::IceGrid::ReplicaGroupDescriptor', '\\IceGrid\\ReplicaGroupDescriptor', array(
        array('id', $IcePHP__t_string),
        array('loadBalancing', $IceGrid__t_LoadBalancingPolicy),
        array('proxyOptions', $IcePHP__t_string),
        array('objects', $IceGrid__t_ObjectDescriptorSeq),
        array('description', $IcePHP__t_string),
        array('filter', $IcePHP__t_string)));
}

namespace IceGrid
{
    global $IceGrid__t_ReplicaGroupDescriptorSeq;

    if(!isset($IceGrid__t_ReplicaGroupDescriptorSeq))
    {
        global $IceGrid__t_ReplicaGroupDescriptor;
        $IceGrid__t_ReplicaGroupDescriptorSeq = IcePHP_defineSequence('::IceGrid::ReplicaGroupDescriptorSeq', $IceGrid__t_ReplicaGroupDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_ApplicationDescriptor;
    class ApplicationDescriptor
    {
        public function __construct($name='', $variables=null, $replicaGroups=null, $serverTemplates=null, $serviceTemplates=null, $nodes=null, $distrib=null, $description='', $propertySets=null)
        {
            $this->name = $name;
            $this->variables = $variables;
            $this->replicaGroups = $replicaGroups;
            $this->serverTemplates = $serverTemplates;
            $this->serviceTemplates = $serviceTemplates;
            $this->nodes = $nodes;
            $this->distrib = is_null($distrib) ? new \IceGrid\DistributionDescriptor : $distrib;
            $this->description = $description;
            $this->propertySets = $propertySets;
        }

        public function __toString()
        {
            global $IceGrid__t_ApplicationDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ApplicationDescriptor);
        }

        public $name;
        public $variables;
        public $replicaGroups;
        public $serverTemplates;
        public $serviceTemplates;
        public $nodes;
        public $distrib;
        public $description;
        public $propertySets;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_StringStringDict;
    global $IceGrid__t_ReplicaGroupDescriptorSeq;
    global $IceGrid__t_TemplateDescriptorDict;
    global $IceGrid__t_NodeDescriptorDict;
    global $IceGrid__t_DistributionDescriptor;
    global $IceGrid__t_PropertySetDescriptorDict;
    $IceGrid__t_ApplicationDescriptor = IcePHP_defineStruct('::IceGrid::ApplicationDescriptor', '\\IceGrid\\ApplicationDescriptor', array(
        array('name', $IcePHP__t_string),
        array('variables', $IceGrid__t_StringStringDict),
        array('replicaGroups', $IceGrid__t_ReplicaGroupDescriptorSeq),
        array('serverTemplates', $IceGrid__t_TemplateDescriptorDict),
        array('serviceTemplates', $IceGrid__t_TemplateDescriptorDict),
        array('nodes', $IceGrid__t_NodeDescriptorDict),
        array('distrib', $IceGrid__t_DistributionDescriptor),
        array('description', $IcePHP__t_string),
        array('propertySets', $IceGrid__t_PropertySetDescriptorDict)));
}

namespace IceGrid
{
    global $IceGrid__t_ApplicationDescriptorSeq;

    if(!isset($IceGrid__t_ApplicationDescriptorSeq))
    {
        global $IceGrid__t_ApplicationDescriptor;
        $IceGrid__t_ApplicationDescriptorSeq = IcePHP_defineSequence('::IceGrid::ApplicationDescriptorSeq', $IceGrid__t_ApplicationDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_BoxedString;
    class BoxedString extends \Ice\Value
    {
        public function __construct($value='')
        {
            $this->value = $value;
        }

        public function ice_id()
        {
            return '::IceGrid::BoxedString';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::BoxedString';
        }

        public function __toString()
        {
            global $IceGrid__t_BoxedString;
            return IcePHP_stringify($this, $IceGrid__t_BoxedString);
        }

        public $value;
    }

    global $Ice__t_Value;
    global $IcePHP__t_string;
    $IceGrid__t_BoxedString = IcePHP_defineClass('::IceGrid::BoxedString', '\\IceGrid\\BoxedString', -1, false, false, $Ice__t_Value, array(
        array('value', $IcePHP__t_string, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeUpdateDescriptor;
    class NodeUpdateDescriptor
    {
        public function __construct($name='', $description=null, $variables=null, $removeVariables=null, $propertySets=null, $removePropertySets=null, $serverInstances=null, $servers=null, $removeServers=null, $loadFactor=null)
        {
            $this->name = $name;
            $this->description = $description;
            $this->variables = $variables;
            $this->removeVariables = $removeVariables;
            $this->propertySets = $propertySets;
            $this->removePropertySets = $removePropertySets;
            $this->serverInstances = $serverInstances;
            $this->servers = $servers;
            $this->removeServers = $removeServers;
            $this->loadFactor = $loadFactor;
        }

        public function __toString()
        {
            global $IceGrid__t_NodeUpdateDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_NodeUpdateDescriptor);
        }

        public $name;
        public $description;
        public $variables;
        public $removeVariables;
        public $propertySets;
        public $removePropertySets;
        public $serverInstances;
        public $servers;
        public $removeServers;
        public $loadFactor;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_BoxedString;
    global $IceGrid__t_StringStringDict;
    global $Ice__t_StringSeq;
    global $IceGrid__t_PropertySetDescriptorDict;
    global $IceGrid__t_ServerInstanceDescriptorSeq;
    global $IceGrid__t_ServerDescriptorSeq;
    $IceGrid__t_NodeUpdateDescriptor = IcePHP_defineStruct('::IceGrid::NodeUpdateDescriptor', '\\IceGrid\\NodeUpdateDescriptor', array(
        array('name', $IcePHP__t_string),
        array('description', $IceGrid__t_BoxedString),
        array('variables', $IceGrid__t_StringStringDict),
        array('removeVariables', $Ice__t_StringSeq),
        array('propertySets', $IceGrid__t_PropertySetDescriptorDict),
        array('removePropertySets', $Ice__t_StringSeq),
        array('serverInstances', $IceGrid__t_ServerInstanceDescriptorSeq),
        array('servers', $IceGrid__t_ServerDescriptorSeq),
        array('removeServers', $Ice__t_StringSeq),
        array('loadFactor', $IceGrid__t_BoxedString)));
}

namespace IceGrid
{
    global $IceGrid__t_NodeUpdateDescriptorSeq;

    if(!isset($IceGrid__t_NodeUpdateDescriptorSeq))
    {
        global $IceGrid__t_NodeUpdateDescriptor;
        $IceGrid__t_NodeUpdateDescriptorSeq = IcePHP_defineSequence('::IceGrid::NodeUpdateDescriptorSeq', $IceGrid__t_NodeUpdateDescriptor);
    }
}

namespace IceGrid
{
    global $IceGrid__t_BoxedDistributionDescriptor;
    class BoxedDistributionDescriptor extends \Ice\Value
    {
        public function __construct($value=null)
        {
            $this->value = is_null($value) ? new \IceGrid\DistributionDescriptor : $value;
        }

        public function ice_id()
        {
            return '::IceGrid::BoxedDistributionDescriptor';
        }

        public static function ice_staticId()
        {
            return '::IceGrid::BoxedDistributionDescriptor';
        }

        public function __toString()
        {
            global $IceGrid__t_BoxedDistributionDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_BoxedDistributionDescriptor);
        }

        public $value;
    }

    global $Ice__t_Value;
    global $IceGrid__t_DistributionDescriptor;
    $IceGrid__t_BoxedDistributionDescriptor = IcePHP_defineClass('::IceGrid::BoxedDistributionDescriptor', '\\IceGrid\\BoxedDistributionDescriptor', -1, false, false, $Ice__t_Value, array(
        array('value', $IceGrid__t_DistributionDescriptor, false, 0)));
}

namespace IceGrid
{
    global $IceGrid__t_ApplicationUpdateDescriptor;
    class ApplicationUpdateDescriptor
    {
        public function __construct($name='', $description=null, $distrib=null, $variables=null, $removeVariables=null, $propertySets=null, $removePropertySets=null, $replicaGroups=null, $removeReplicaGroups=null, $serverTemplates=null, $removeServerTemplates=null, $serviceTemplates=null, $removeServiceTemplates=null, $nodes=null, $removeNodes=null)
        {
            $this->name = $name;
            $this->description = $description;
            $this->distrib = $distrib;
            $this->variables = $variables;
            $this->removeVariables = $removeVariables;
            $this->propertySets = $propertySets;
            $this->removePropertySets = $removePropertySets;
            $this->replicaGroups = $replicaGroups;
            $this->removeReplicaGroups = $removeReplicaGroups;
            $this->serverTemplates = $serverTemplates;
            $this->removeServerTemplates = $removeServerTemplates;
            $this->serviceTemplates = $serviceTemplates;
            $this->removeServiceTemplates = $removeServiceTemplates;
            $this->nodes = $nodes;
            $this->removeNodes = $removeNodes;
        }

        public function __toString()
        {
            global $IceGrid__t_ApplicationUpdateDescriptor;
            return IcePHP_stringify($this, $IceGrid__t_ApplicationUpdateDescriptor);
        }

        public $name;
        public $description;
        public $distrib;
        public $variables;
        public $removeVariables;
        public $propertySets;
        public $removePropertySets;
        public $replicaGroups;
        public $removeReplicaGroups;
        public $serverTemplates;
        public $removeServerTemplates;
        public $serviceTemplates;
        public $removeServiceTemplates;
        public $nodes;
        public $removeNodes;
    }

    global $IcePHP__t_string;
    global $IceGrid__t_BoxedString;
    global $IceGrid__t_BoxedDistributionDescriptor;
    global $IceGrid__t_StringStringDict;
    global $Ice__t_StringSeq;
    global $IceGrid__t_PropertySetDescriptorDict;
    global $IceGrid__t_ReplicaGroupDescriptorSeq;
    global $IceGrid__t_TemplateDescriptorDict;
    global $IceGrid__t_NodeUpdateDescriptorSeq;
    $IceGrid__t_ApplicationUpdateDescriptor = IcePHP_defineStruct('::IceGrid::ApplicationUpdateDescriptor', '\\IceGrid\\ApplicationUpdateDescriptor', array(
        array('name', $IcePHP__t_string),
        array('description', $IceGrid__t_BoxedString),
        array('distrib', $IceGrid__t_BoxedDistributionDescriptor),
        array('variables', $IceGrid__t_StringStringDict),
        array('removeVariables', $Ice__t_StringSeq),
        array('propertySets', $IceGrid__t_PropertySetDescriptorDict),
        array('removePropertySets', $Ice__t_StringSeq),
        array('replicaGroups', $IceGrid__t_ReplicaGroupDescriptorSeq),
        array('removeReplicaGroups', $Ice__t_StringSeq),
        array('serverTemplates', $IceGrid__t_TemplateDescriptorDict),
        array('removeServerTemplates', $Ice__t_StringSeq),
        array('serviceTemplates', $IceGrid__t_TemplateDescriptorDict),
        array('removeServiceTemplates', $Ice__t_StringSeq),
        array('nodes', $IceGrid__t_NodeUpdateDescriptorSeq),
        array('removeNodes', $Ice__t_StringSeq)));
}
namespace
{new Ice\SliceChecksumInit(array(
    "::IceGrid::AdapterDescriptor" => "4ae12581eab9d8ecba56534d28960f0",
    "::IceGrid::AdapterDescriptorSeq" => "61bb9118038552b5e80bf14cf41719c",
    "::IceGrid::AdaptiveLoadBalancingPolicy" => "eae551a45bf88ecdfdcbd169e3502816",
    "::IceGrid::ApplicationDescriptor" => "fc17fb9c4c7fc8f17ad10bc5da634a0",
    "::IceGrid::ApplicationDescriptorSeq" => "b56d6d3091e8c0199e924bbdc074",
    "::IceGrid::ApplicationUpdateDescriptor" => "9aef62072a0ecc3ee4be33bc46e0da",
    "::IceGrid::BoxedDistributionDescriptor" => "bab8796f5dc33ebe6955d4bb3219c5e9",
    "::IceGrid::BoxedString" => "f6bfc069c5150c34e14331c921218d7",
    "::IceGrid::CommunicatorDescriptor" => "b7cdae49f8df0d1d93afb857875ec15",
    "::IceGrid::DbEnvDescriptor" => "19c130dac4bf7fa2f82375a85e5f421",
    "::IceGrid::DbEnvDescriptorSeq" => "d0e45f67b942541727ae69d6cda2fdd8",
    "::IceGrid::DistributionDescriptor" => "109eee8e2dc57e518243806796d756",
    "::IceGrid::IceBoxDescriptor" => "814eec3d42ab727f75f7b183e1b02c38",
    "::IceGrid::LoadBalancingPolicy" => "dfbd5166bbdcac620f2d7f5de185afe",
    "::IceGrid::NodeDescriptor" => "be38d2d0b946fea6266f7a97d493d4",
    "::IceGrid::NodeDescriptorDict" => "600e78031867992f2fbd18719cb494",
    "::IceGrid::NodeUpdateDescriptor" => "d1c0a29ce34753b44e54285c49c9780",
    "::IceGrid::NodeUpdateDescriptorSeq" => "3416e1746e2acedfb8192d9d83d9dc3",
    "::IceGrid::ObjectDescriptor" => "913039a22b7b5fc0fd156ce764a4237d",
    "::IceGrid::ObjectDescriptorSeq" => "57236a6ef224f825849907a344412bb",
    "::IceGrid::OrderedLoadBalancingPolicy" => "bef5dacddeeae0e0b58945adaea2121",
    "::IceGrid::PropertyDescriptor" => "8b2145a8b1c5c8ffc9eac6a13e731798",
    "::IceGrid::PropertyDescriptorSeq" => "5f4143ef7e2c87b63136a3177b7a2830",
    "::IceGrid::PropertySetDescriptor" => "d07a6de61ed833b349d869bacb7d857",
    "::IceGrid::PropertySetDescriptorDict" => "30fc60d722ab4ba7affa70387730322f",
    "::IceGrid::RandomLoadBalancingPolicy" => "b52a26591c76fe2d6d134d954568c1a",
    "::IceGrid::ReplicaGroupDescriptor" => "dadc1d584d51fe9a16ea846b2796717",
    "::IceGrid::ReplicaGroupDescriptorSeq" => "5a3d3e7b4dc5f21b74f7adb5a6b24ccc",
    "::IceGrid::RoundRobinLoadBalancingPolicy" => "d9c7e987c732d89b7aa79621a788fcb4",
    "::IceGrid::ServerDescriptor" => "45903227dd1968cedd1811b9d71bc374",
    "::IceGrid::ServerDescriptorSeq" => "1bf128cadf1974b22258f66617a1ed",
    "::IceGrid::ServerInstanceDescriptor" => "56938d38e0189cdbd57d16e5a6bbc0fb",
    "::IceGrid::ServerInstanceDescriptorSeq" => "2a8ae55ccef7917d96691c0a84778dd",
    "::IceGrid::ServiceDescriptor" => "7c2496565248aa7d9732565ee5fe7c",
    "::IceGrid::ServiceDescriptorSeq" => "cc519ed2b7f626b896cdc062823166",
    "::IceGrid::ServiceInstanceDescriptor" => "8581f0afc39ae7daab937244b28c1394",
    "::IceGrid::ServiceInstanceDescriptorSeq" => "eb22cd2a50e79f648d803c4b54755",
    "::IceGrid::StringStringDict" => "87cdc9524ba3964efc9091e5b3346f29",
    "::IceGrid::TemplateDescriptor" => "d1229192d114f32db747493becd5765",
    "::IceGrid::TemplateDescriptorDict" => "7b9427f03e8ce3b67decd2cc35baa1"));
}
?>
